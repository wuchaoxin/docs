import{_ as e,c as d,o,a}from"./app.3d9ab6db.js";const _=JSON.parse('{"title":"基础指引","description":"","frontmatter":{},"headers":[{"level":2,"title":"node 版本的选择","slug":"node-版本的选择","link":"#node-版本的选择","children":[]},{"level":2,"title":"选取正确的包管理器","slug":"选取正确的包管理器","link":"#选取正确的包管理器","children":[]},{"level":2,"title":"压缩方案的选择","slug":"压缩方案的选择","link":"#压缩方案的选择","children":[{"level":3,"title":"通过压缩网站进行压缩","slug":"通过压缩网站进行压缩","link":"#通过压缩网站进行压缩","children":[]},{"level":3,"title":"通过 webpack 打包处理","slug":"通过-webpack-打包处理","link":"#通过-webpack-打包处理","children":[]},{"level":3,"title":"tinify api 压缩","slug":"tinify-api-压缩","link":"#tinify-api-压缩","children":[]}]}],"relativePath":"frontend-lead-guide/base.md","lastUpdated":1675835613000}'),c={name:"frontend-lead-guide/base.md"},n=a('<h1 id="基础指引" tabindex="-1">基础指引 <a class="header-anchor" href="#基础指引" aria-hidden="true">#</a></h1><blockquote><p>本文档的内容都是与配置相关。</p></blockquote><h2 id="node-版本的选择" tabindex="-1">node 版本的选择 <a class="header-anchor" href="#node-版本的选择" aria-hidden="true">#</a></h2><p>笔者当前的 node 版本为：<code>v16.16.0</code>（截止到 2022/08 这是一个最新的长期维护版本）。</p><blockquote><p>如果你的控制台显示 node-sass 不适用于你的版本，请不用犹豫，你的 node 版本过高了，使用 <code>nvm</code> 或者 <code>volta</code> 降低版本即可。</p></blockquote><blockquote><p>如果你的控制台显示 需要安装 python 环境，或许是你当前是 apple 芯片的 mac 安装了低于 <code>node 15</code> 的 node，因为 <code>node 15</code> 版本以下的并不支持 arm。</p></blockquote><h2 id="选取正确的包管理器" tabindex="-1">选取正确的包管理器 <a class="header-anchor" href="#选取正确的包管理器" aria-hidden="true">#</a></h2><p>一般线上 <code>jenkins</code> 使用的是 <code>npm</code>，但是项目中不难免的会使用 <code>npm</code>、<code>yarn</code>、<code>pnpm</code>，所以我们为了防止 <code>lock</code> 文件冲突或者不同步的现象发生，这里我们更加推荐在安装 <code>npm</code>、<code>yarn</code>、<code>pnpm</code> 后再安装一个 <code>ni</code>，去自动选取当前目录正确的包管理器。</p><p><a href="https://github.com/antfu/ni" target="_blank" rel="noreferrer">ni github 地址</a></p><p>你也可以通过我写的文章去更多了解 <code>ni</code> 的实际场景。</p><p><a href="https://juejin.cn/post/7128276128648658974" target="_blank" rel="noreferrer">ni 优雅使用包管理器</a></p><h2 id="压缩方案的选择" tabindex="-1">压缩方案的选择 <a class="header-anchor" href="#压缩方案的选择" aria-hidden="true">#</a></h2><p>关于压缩这一点，其实很重要，它关乎了页面的速度以及打包的大小。一般来说有这么几种方案：</p><h3 id="通过压缩网站进行压缩" tabindex="-1">通过压缩网站进行压缩 <a class="header-anchor" href="#通过压缩网站进行压缩" aria-hidden="true">#</a></h3><p>压缩网站有大名鼎鼎的<a href="https://tinify.cn/" target="_blank" rel="noreferrer">tinify</a>，但是网站在线压缩的时候，图片多了会时常不稳定，而且图片移动来移动去也挺麻烦。</p><h3 id="通过-webpack-打包处理" tabindex="-1">通过 webpack 打包处理 <a class="header-anchor" href="#通过-webpack-打包处理" aria-hidden="true">#</a></h3><p>通过某些<code>loader</code> 或者 <code>plugins</code> 进行处理。<code>trust me</code>，它们是有一些很好用，但是它们的依赖都大部分从<code>github</code>上拉取的，这会有一个致命问题，偶尔下载依赖会很慢或者直接失败。</p><h3 id="tinify-api-压缩" tabindex="-1">tinify api 压缩 <a class="header-anchor" href="#tinify-api-压缩" aria-hidden="true">#</a></h3><ol><li>去<a href="https://tinify.cn/developers" target="_blank" rel="noreferrer">Tiny developers</a>申请开发者 <code>apiKey</code></li><li><code>vscode</code> 下载 <code>TinyPNG</code> 插件（当前其他编辑器也有这个插件）；配置好<code>apiKey</code>以及<code>forceOverwrite</code>（插件界面有操作说明）。</li><li><code>vscode</code> 下通过右键图片或者文件夹，可对图片或者文件夹下的图片进行压缩；每个月有免费的<code>500</code>次压缩次数，十分稳定。</li></ol>',19),i=[n];function t(r,l,p,h,s,f){return o(),d("div",null,i)}const b=e(c,[["render",t]]);export{_ as __pageData,b as default};
