import{_ as e,c as o,o as l,a as s}from"./app.17fb9f66.js";const h=JSON.parse('{"title":"frontend-common","description":"","frontmatter":{},"headers":[{"level":2,"title":"分支说明","slug":"分支说明","link":"#分支说明","children":[]},{"level":2,"title":"submodule","slug":"submodule","link":"#submodule","children":[{"level":3,"title":"如何使用","slug":"如何使用","link":"#如何使用","children":[]},{"level":3,"title":"卸载 submodule","slug":"卸载-submodule","link":"#卸载-submodule","children":[]}]},{"level":2,"title":"使用必要操作","slug":"使用必要操作","link":"#使用必要操作","children":[{"level":3,"title":"引入类型声明文件","slug":"引入类型声明文件","link":"#引入类型声明文件","children":[]},{"level":3,"title":"老项目引入","slug":"老项目引入","link":"#老项目引入","children":[]}]}],"relativePath":"frontend-common-guide/README.md","lastUpdated":1675835613000}'),a={name:"frontend-common-guide/README.md"},n=s(`<h1 id="frontend-common" tabindex="-1">frontend-common <a class="header-anchor" href="#frontend-common" aria-hidden="true">#</a></h1><p>仓库地址：<a href="https://gitlab.healthych.com/front/frontend-common" target="_blank" rel="noreferrer">frontend-common</a></p><p>该仓库旨在将所有工具类的设置以及函数进行统一处理，已达到提升效率的作用。</p><blockquote><p>如果你想要进行贡献代码，请先查看贡献文档。</p></blockquote><h2 id="分支说明" tabindex="-1">分支说明 <a class="header-anchor" href="#分支说明" aria-hidden="true">#</a></h2><ol><li>master：配置以及函数主分支（常用分支），建设优先级高</li><li>master-template：架子主分支，用于存放基础架子，建设优先级中</li><li>master-cli：简易脚手架主分支，用于快速拉取写入架子，建设优先级低</li></ol><h2 id="submodule" tabindex="-1">submodule <a class="header-anchor" href="#submodule" aria-hidden="true">#</a></h2><p>强烈建议该仓库作为子仓库进行引入（submodule）</p><p>关于 <a href="https://juejin.cn/post/6844903572950401038" target="_blank" rel="noreferrer">submodule</a> 的介绍以及说明</p><h3 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-hidden="true">#</a></h3><ol><li>如果是首次引入直接运行 <code>git submodule add 仓库地址</code></li><li>如果仓库已有 <code>submodule</code> 设置，需要运行 <code>git submodule init</code> 以及 <code>git submodule update</code> 进行拉取代码</li></ol><blockquote><p>值得注意的是：请不要反复引入 submodule ，因为删除 submodule 会涉及好几个隐藏文件，稍稍有点麻烦</p></blockquote><blockquote><p>当然，路径需要设置别名是最方便的。</p></blockquote><p>别名示例：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@common</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(__dirname</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">frontend-common</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@common-utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: path</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(__dirname</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">frontend-common/utils</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>当然别忘记配置 <code>tsconfig.json</code> 或者 <code>jsconfig.json</code> 相关 <code>paths</code> 配置</p></blockquote><h3 id="卸载-submodule" tabindex="-1">卸载 submodule <a class="header-anchor" href="#卸载-submodule" aria-hidden="true">#</a></h3><blockquote><p>git 目录需要你打开查看隐藏目录</p></blockquote><ol><li>需要先暂存 <code>.gitmodules</code> 文件, 否则会报错</li><li>删除你想卸载的 submodule 目录</li><li>修改 <code>.gitmodules</code>：移除对应的 submodule 信息, 只有1个 submodule 信息也可以删除该文件</li><li>进入 <code>git/modules</code>：移除对应的 submodule 目录</li><li>进入 <code>.git/config</code>：移除对应的 submodule 信息</li></ol><h2 id="使用必要操作" tabindex="-1">使用必要操作 <a class="header-anchor" href="#使用必要操作" aria-hidden="true">#</a></h2><h3 id="引入类型声明文件" tabindex="-1">引入类型声明文件 <a class="header-anchor" href="#引入类型声明文件" aria-hidden="true">#</a></h3><p>在 <code>tsconfig.json</code> 中的 <code>include</code> 中，加入 <code>frontend-common/shims.d.ts</code>。</p><blockquote><p>请注意项目中的 <code>shims.d.ts</code> 不要和公共库里的 <code>shims.d.ts</code> 冲突。</p></blockquote><h3 id="老项目引入" tabindex="-1">老项目引入 <a class="header-anchor" href="#老项目引入" aria-hidden="true">#</a></h3><p>如果在老项目中引入公共库，可能会报类型错误，需将 <code>.babelrc</code> 修改为 <code>babel.config.js</code>。 两者区别请见<a href="https://zhuanlan.zhihu.com/p/367724302" target="_blank" rel="noreferrer">此处</a>。</p><blockquote><p><code>.babelrc</code> 是局部配置，<code>babel.config.js</code> 是全局配置。公共库被识别为一个项目了，导致公共库没有过 babel，所以会报错。引入公共库的项目应当使用 <code>babel.config.js</code>。详细解释请见<a href="https://stackoverflow.com/questions/52990965/babel-submodule-unexpected-token-import" target="_blank" rel="noreferrer">此处</a>。</p></blockquote><div class="warning custom-block"><p class="custom-block-title">提示</p><p>如果你将 <code>.babellrc</code> 修改为 <code>babel.config.js</code>，发现 babel 配置直接没有生效。请检查 babel 版本，@babel/core 7.7 以上，才能使用 babel.config.js。</p></div>`,27),t=[n];function c(d,r,i,p,u,b){return l(),o("div",null,t)}const f=e(a,[["render",c]]);export{h as __pageData,f as default};
