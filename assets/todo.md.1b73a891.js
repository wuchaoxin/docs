import{_ as e,c as a,o as d,a as i}from"./app.b713d63a.js";const g=JSON.parse('{"title":"todo","description":"","frontmatter":{},"headers":[{"level":2,"title":"关于文档库","slug":"关于文档库","link":"#关于文档库","children":[{"level":3,"title":"文档库的基础搭建和发布 ✅","slug":"文档库的基础搭建和发布","link":"#文档库的基础搭建和发布","children":[]},{"level":3,"title":"版本升级 🙌","slug":"版本升级","link":"#版本升级","children":[]},{"level":3,"title":"Search ✅","slug":"search","link":"#search","children":[]},{"level":3,"title":"流程图 ✅","slug":"流程图","link":"#流程图","children":[]},{"level":3,"title":"树组件 ❌","slug":"树组件","link":"#树组件","children":[]}]},{"level":2,"title":"关于公共库","slug":"关于公共库","link":"#关于公共库","children":[{"level":3,"title":"公共库的基础搭建和引入 ✅","slug":"公共库的基础搭建和引入","link":"#公共库的基础搭建和引入","children":[]},{"level":3,"title":"如何方便引入 ✅","slug":"如何方便引入","link":"#如何方便引入","children":[]},{"level":3,"title":"vue-demi ❌","slug":"vue-demi","link":"#vue-demi","children":[]},{"level":3,"title":"函数补充 ✅","slug":"函数补充","link":"#函数补充","children":[]},{"level":3,"title":"vue3 组件补充 🙌","slug":"vue3-组件补充","link":"#vue3-组件补充","children":[]},{"level":3,"title":"vue3 hook 补充","slug":"vue3-hook-补充","link":"#vue3-hook-补充","children":[]},{"level":3,"title":"vue3 指令补充","slug":"vue3-指令补充","link":"#vue3-指令补充","children":[]},{"level":3,"title":"JSBridge ✅","slug":"jsbridge","link":"#jsbridge","children":[]},{"level":3,"title":"统一登录注册页 🙌","slug":"统一登录注册页","link":"#统一登录注册页","children":[]},{"level":3,"title":"微信流程封装 ✅","slug":"微信流程封装","link":"#微信流程封装","children":[]}]},{"level":2,"title":"关于小程序","slug":"关于小程序","link":"#关于小程序","children":[]},{"level":2,"title":"关于 SSR","slug":"关于-ssr","link":"#关于-ssr","children":[]}],"relativePath":"todo.md","lastUpdated":1675835613000}'),r={name:"todo.md"},l=i('<h1 id="todo" tabindex="-1">todo <a class="header-anchor" href="#todo" aria-hidden="true">#</a></h1><p>该文件旨在说明目前进行着手的事情以及后续需要完成的内容</p><ul><li>✅ 为已完成</li><li>❌ 为调研失败</li><li>🙌 为正在开发或者调研</li></ul><h2 id="关于文档库" tabindex="-1">关于文档库 <a class="header-anchor" href="#关于文档库" aria-hidden="true">#</a></h2><h3 id="文档库的基础搭建和发布" tabindex="-1">文档库的基础搭建和发布 ✅ <a class="header-anchor" href="#文档库的基础搭建和发布" aria-hidden="true">#</a></h3><p>通过 <code>vitepress</code> 进行快速搭建文档，而通过 <code>gitlab</code> 的 <code>webhook</code> 进行触发 <code>jenkins</code> 部署。</p><h3 id="版本升级" tabindex="-1">版本升级 🙌 <a class="header-anchor" href="#版本升级" aria-hidden="true">#</a></h3><p>由于文档库基于 <code>vitepress</code> 进行搭建的，<code>vitepress</code> 目前还处于 alpha 阶段，本人将进行持续关注版本的更新以及 bug 修复。等待 <code>vitepress</code> <code>1.0.0</code> 版本的正式推出，本人将不会高强度关注版本变化。</p><h3 id="search" tabindex="-1">Search ✅ <a class="header-anchor" href="#search" aria-hidden="true">#</a></h3><p>Search 是指文档库能够通过搜索快速进行查找到想要的文档，详情见 <a href="https://vitepress.vuejs.org/guide/theme-search" target="_blank" rel="noreferrer">search</a>。</p><div class="tip custom-block"><p class="custom-block-title">使用第三方插件</p><p>由于官方推荐的方式需要在公网进行抓取，当前无法使用，转而采用第三方插件实现 <a href="https://github.com/emersonbottero/vitepress-plugin-search" target="_blank" rel="noreferrer">vitepress-plugin-search</a>。</p></div><h3 id="流程图" tabindex="-1">流程图 ✅ <a class="header-anchor" href="#流程图" aria-hidden="true">#</a></h3><p>详情见 <a href="/docs/frontend-flow-chart-guide/README.html">流程图</a>。</p><h3 id="树组件" tabindex="-1">树组件 ❌ <a class="header-anchor" href="#树组件" aria-hidden="true">#</a></h3><p>树组件主要是针对 <code>man 端</code> 权限进行一个详细的说明（结合上线文档），需有如下的功能：</p><ol><li>图标以及相关信息区分菜单以及权限</li><li>颜色或者图标标记新增与删除项</li><li>展示图标、图片、名称、地址、类型等相关信息</li><li>具有剪贴板功能</li><li>能够看出原始的 json 信息</li></ol><div class="warning custom-block"><p class="custom-block-title">路径转移</p><p>目前这方面维护已交由后端 sql 进行处理，前端不在维护路径上，故不行进行处理。</p></div><h2 id="关于公共库" tabindex="-1">关于公共库 <a class="header-anchor" href="#关于公共库" aria-hidden="true">#</a></h2><h3 id="公共库的基础搭建和引入" tabindex="-1">公共库的基础搭建和引入 ✅ <a class="header-anchor" href="#公共库的基础搭建和引入" aria-hidden="true">#</a></h3><p>通过 <code>submodule</code> 进行代码共享，通过 <code>tsc</code> 转译 ts 文件至 js 文件。</p><h3 id="如何方便引入" tabindex="-1">如何方便引入 ✅ <a class="header-anchor" href="#如何方便引入" aria-hidden="true">#</a></h3><p>因为现在发布都是走的 <code>jenkins</code>，如何让每个项目都拉取公共库，这是一个值得讨论的问题。</p><div class="tip custom-block"><p class="custom-block-title">模板引入</p><p>运维目前给 <code>jenkins</code> 添加了公有模板，使得每次都会去拉取公共库代码（如果仓库中没有添加公共库，也不会有影响）。</p></div><h3 id="vue-demi" tabindex="-1">vue-demi ❌ <a class="header-anchor" href="#vue-demi" aria-hidden="true">#</a></h3><p>vue-demi 旨在编写一套代码，可以兼容 vue3 以及 vue2。</p><div class="warning custom-block"><p class="custom-block-title">放弃探索</p><p>目前 vant 官方并不打算支持 <code>vue-demi</code>，并且该库偏底层一些，占用时间比较长（并且路线不明），放弃。</p></div><h3 id="函数补充" tabindex="-1">函数补充 ✅ <a class="header-anchor" href="#函数补充" aria-hidden="true">#</a></h3><p>常用函数以及文档已编写完毕。</p><div class="tip custom-block"><p class="custom-block-title">vscode region</p><p>目前函数注释通过 <code>vscode region</code> 进行代码引入的方式，详情见：<a href="https://vitepress.vuejs.org/guide/markdown#import-code-snippets" target="_blank" rel="noreferrer">Import Code Snippets</a>。</p></div><h3 id="vue3-组件补充" tabindex="-1">vue3 组件补充 🙌 <a class="header-anchor" href="#vue3-组件补充" aria-hidden="true">#</a></h3><p>先考虑支持 <code>vue3</code> 版本，目前正在慢速增加中。</p><h3 id="vue3-hook-补充" tabindex="-1">vue3 hook 补充 <a class="header-anchor" href="#vue3-hook-补充" aria-hidden="true">#</a></h3><p>先考虑支持 <code>vue3</code> 版本，目前待支持中。</p><h3 id="vue3-指令补充" tabindex="-1">vue3 指令补充 <a class="header-anchor" href="#vue3-指令补充" aria-hidden="true">#</a></h3><p>目前还未清楚，业务中暂时要哪些指令</p><h3 id="jsbridge" tabindex="-1">JSBridge ✅ <a class="header-anchor" href="#jsbridge" aria-hidden="true">#</a></h3><p>目前 <code>JSBridge</code> 已开发完毕，详情见：<a href="/docs/frontend-js-bridge-guide/README.html">JSBridge</a>。</p><div class="warning custom-block"><p class="custom-block-title">风险点</p><p>APP 方并没有对这种模式进行预演，而是在项目开发周期中进行引入直接开发。目前已经发现安卓方已有多个<a href="/docs/frontend-js-bridge-guide/index.html">不理想点</a>。这种方式下，存在 APP 变更框架模式的情况（目前 H5 是跟随 APP 方的技术走的，虽然自己也之前实现过，不过为了方便 APP 就跟随 APP 方的技术）。</p></div><h3 id="统一登录注册页" tabindex="-1">统一登录注册页 🙌 <a class="header-anchor" href="#统一登录注册页" aria-hidden="true">#</a></h3><p>开发一个统一登录注册页组件</p><div class="warning custom-block"><p class="custom-block-title">TODO</p><p>目前开发了一个统一登录组件，后面需要将其管理在某一个项目中。</p></div><h3 id="微信流程封装" tabindex="-1">微信流程封装 ✅ <a class="header-anchor" href="#微信流程封装" aria-hidden="true">#</a></h3><p>封装微信流程，使得使用更加方便。详情见：<a href="/docs/frontend-common-guide/utils/weChat.html">微信</a>。</p><h2 id="关于小程序" tabindex="-1">关于小程序 <a class="header-anchor" href="#关于小程序" aria-hidden="true">#</a></h2><p>目前后期很有可能在小程序上进行发力，需要有空时针对小程序进行技术储备。目前市面上小程序常用框架一般是：<a href="https://docs.taro.zone/docs/" target="_blank" rel="noreferrer">taro</a> 或者 <a href="https://uniapp.dcloud.net.cn/" target="_blank" rel="noreferrer">uniapp</a></p><p>在前几年，一般开发会认定 react 技术栈认定 taro，而 vue 技术栈认定 uniapp。但是目前如何选择还需要进行一定的考虑。并且还需要考虑的是，组件库的选择。</p><p>根据在论坛上询问，taro 目前在 <code>vue3</code> 中编译性能不够高，在开发阶段中比较卡（即使到 3.5 版本，当然本人没有进行实验），这方面需要持续跟进中。</p><div class="info custom-block"><p class="custom-block-title">目前掌握的信息</p><p>目前发现小程序最大的问题还是维护度的问题，很有可能在使用的开源框架就不进行更新了。 所以这里个人更加推荐更加稳定的原生： <code>uniapp</code> + <code>uni-ui</code> 进行开发（这样使用的好处是贴近 vue 技术栈并且不会脱离更新）。</p></div><h2 id="关于-ssr" tabindex="-1">关于 SSR <a class="header-anchor" href="#关于-ssr" aria-hidden="true">#</a></h2><p>目前后续期很有可能在 SSR 服务端渲染进行发力（因为需要做官网），需要有空时针对 SSR 进行技术储备。一般来说，官网一般都是 <code>react</code> 加 <code>next.js</code> 进行开发，但是目前我们的技术栈是以 <code>vue3</code> 为主，这一部分还是要考虑 <a href="https://v3.nuxtjs.org/" target="_blank" rel="noreferrer">nuxt3</a> 是否有能力去承载这一开发内容。</p><p>当前这块还需要 <code>docker</code> 相关的知识。</p>',51),t=[l];function c(o,s,h,n,p,u){return d(),a("div",null,t)}const k=e(r,[["render",c]]);export{g as __pageData,k as default};
