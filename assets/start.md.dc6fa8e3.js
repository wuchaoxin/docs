import{_ as e,c as o,o as d,a as s}from"./app.3d9ab6db.js";const g=JSON.parse('{"title":"说明","description":"","frontmatter":{},"headers":[{"level":2,"title":"WHY","slug":"why","link":"#why","children":[]},{"level":2,"title":"HOW","slug":"how","link":"#how","children":[]},{"level":2,"title":"RELEASE","slug":"release","link":"#release","children":[]},{"level":2,"title":"DESIGN","slug":"design","link":"#design","children":[]}],"relativePath":"start.md","lastUpdated":1675835613000}'),c={name:"start.md"},a=s('<h1 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">警告</p><p>当前 <code>VitePress</code> 还属于 <code>alpha</code> 阶段，不建议将其放入正式的项目中。如果你有相关需求需要移步至 <a href="https://v2.vuepress.vuejs.org/zh/" target="_blank" rel="noreferrer">VuePress</a></p></div><blockquote><p>即使 <code>VuePress</code> 最新版本处于 <code>beta</code> 阶段也会比 <code>VitePress</code> 稳定，因为 <code>VitePress</code> 刚进入 <code>1.0.0-alpha</code>，api 相关可能会发生变动。</p></blockquote><h2 id="why" tabindex="-1">WHY <a class="header-anchor" href="#why" aria-hidden="true">#</a></h2><p>为什么要搭建一个前端文档？目前前端文档没有进行整合，这里主要对文档（内部以及外部）进行一个整合，并且提供一个比较好的可视化查看。</p><h2 id="how" tabindex="-1">HOW <a class="header-anchor" href="#how" aria-hidden="true">#</a></h2><p>由于目前文档库都由一人来维护，所以不适合进行单独的文档维护，但是不单独维护文档又显得文档简陋，目前采用以下方案：固定的文案写入以及引入部分的代码片段进行说明（这部分是可变的，在你重新拉取打包时，可以进行更新，实现方案是 <code>vscode region</code>。</p><h2 id="release" tabindex="-1">RELEASE <a class="header-anchor" href="#release" aria-hidden="true">#</a></h2><p>目前的部署流程，打算通过 <code>git</code> 固定的分支(<code>master</code>)的 <code>hook</code> 去触发 <code>Jenkins</code> 发布（当前 push 之前你应该先去拉 <code>submodule</code> 一次）。</p><blockquote><p>从很大程度已经降低维护的心智负担。流程：拉取 <code>submodule</code> -&gt; <code>git push</code> -&gt; <code>Jenkins</code> 自动发布。</p></blockquote><h2 id="design" tabindex="-1">DESIGN <a class="header-anchor" href="#design" aria-hidden="true">#</a></h2><p>本项目通过 <a href="https://vitepress.vuejs.org/" target="_blank" rel="noreferrer">VitePress</a> 进行构建生成。为何采用 <code>VitePress</code>，而非其他构建工具呢？因为 <code>VitePress</code> 原生支持 <code>Vue3</code> 写法，可以快速进行构建并且执行 <code>Vue3</code> 语法。不采用 <code>VuePress</code> 的原因就是 <code>VitePress</code> 相比 <code>VuePress</code> 配置更加简单、易懂。</p><p>当前缺点也显而易见，<code>VitePress</code> 暂时没有中文文档，并且相比 <code>VuePress</code>，<code>VitePress</code> 的生态并不丰富。</p>',13),r=[a];function t(i,l,h,n,p,u){return d(),o("div",null,r)}const V=e(c,[["render",t]]);export{g as __pageData,V as default};
